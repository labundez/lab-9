---
title: "Lab 9: Data Simulation Exploration"
author: "Lisette Abundez"
format: 
  html:
    code-tools: true
    echo: true
    code-fold: true
editor: source
embed-resources: true
warning: false
message: false
---


## Random Babies Simulation

Perhaps you have seen the [Random Babies applet](https://www.rossmanchance.com/applets/2021/randombabies/RandomBabies.html)? 
Suppose one night at a hospital four babies are born. The hospital is not very
organized and looses track of which baby belongs to each parent(s), so they 
decide to return the babies to parents at random. Here, we are interested in the
number of babies that are correctly returned to their respective parent(s).

**1. Simulate the distribution of the number of babies that are correctly returned. Use 10,000 simulations.**

::: callout-tip
Write a function to accomplish one simulation, then use `map_int()` to run
10,000 simulations. 

Keep in mind that your function needs to output a single number (not data frame) 
for it to be compatible with `map_int()`!
:::

```{r}
#| label: function-simulation-for-random-babies

library(purrr)
library(dplyr)
library(tidyverse)
library(gt)

randomBabies <- function(nBabies){
  assigned <- sample(1:nBabies, 
                     nBabies, 
                     replace = FALSE)
   sum(assigned == 1:nBabies)
}

results <- map_int(.x = 1:10000,
                   .f = ~randomBabies(4)
                   )
```

**2. Create a table displaying the proportion of simulations where 0, 1, 2, 3, and 4 babies were given to their correct parent(s).** Hint: A `pivot_wider()` will be helpful here!

::: callout-tip
The output of your `map_int()` is a vector, but to make a nice table (and plot) 
you need this to be a data frame! Luckily, the `enframe()` function does just 
that--it converts a vector to a data frame. 

You may find the following code helpful:

```{r}
#| label: create-table
proportions_df <- enframe(results, 
        name = "simulation_number", 
        value = "ncorrect")
```
:::

```{r}
#| label: table-for-random-babies

proportions_df <- proportions_df |>
  count(ncorrect) |>
  mutate(proportion = n / sum(n)) |>
  select(ncorrect, proportion) |>
  pivot_wider(names_from = ncorrect, 
              values_from = proportion,
              names_prefix = "correct_") 

proportions_table <- proportions_df |>
  gt() |>
  cols_label(
    correct_0 = "None",
    correct_1 = "One Correct",
    correct_2 = "Two Correct",
    correct_4 = "All Correct"
  ) |>
  tab_header(
    title = "Proportions of Babies Returned to Correct Parents",
    subtitle = "(Out of 4 babies)"
  ) |>
  fmt_percent() |>
  tab_style(
    style = cell_text(
      size = 14,
      align = "center"
    ),
    locations = cells_body()
  ) |>
  tab_style(
    style = cell_text(
      align = "center"
    ),
    locations = cells_column_labels()
  )

proportions_table

```

**3. Now create a barplot showing the proportion of simulations where 0, 1, 2, 3, and 4 babies were given to their correct parent(s).** 

::: callout-tip
You may find the following code helpful:

```{r}
#| eval: false

geom_bar(mapping = aes(y = after_stat(count) / sum(after_stat(count))
                       )
         )

```
:::

``` {r}
#| label: visualization-distribution

long_df <- proportions_df |> 
  pivot_longer(cols = everything(), 
               names_to = "ncorrect", 
               values_to = "proportion")

ggplot(long_df) +
  geom_bar(aes(x = ncorrect, y = proportion), 
           stat = "identity", fill = "skyblue", color = "black") +
  scale_x_discrete(labels = c("correct_0" = "None", 
                              "correct_1" = "1", 
                              "correct_2" = "2", 
                              "correct_3" = "3",
                              "correct_4" = "All")) +
  labs(x = "Number of Correct Assignments", 
       y = NULL,
       subtitle = "Proportion of Simulations",
       title = "Proportion of Simulations by Correct Assignments") 
``` 
Used ChatGPT (https://chatgpt.com/share/6744f5c0-70b4-800e-9cd7-9cd400fccf5e) to navigate how my approach was different from the inital code provided. 

